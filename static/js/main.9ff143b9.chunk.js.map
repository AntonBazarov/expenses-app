{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/ExpenseFilter/ExpenseFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","valuesArray","dataPoints","dataPoint","max","ExpensesChart","chartDataPoints","expenses","getMonth","ExpensesFilter","filterOption","onChange","event","chosenOption","target","onChangeOption","defaultValue","Expense","useState","filteredYear","setFilteredYear","filteredExpenses","filter","Number","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancelEditing","NewExpense","isFormShown","setIsFormShown","toggleFormHandler","addedExpenseData","random","toString","onAddExpense","DUMMY_EXPENSES","App","setExpenses","expenseItem","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"6bAeeA,EAbK,SAACC,GACnB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,UACpDG,EAAMJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOL,EAAME,KAAKI,cACxB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCN,IACtC,qBAAKM,UAAU,oBAAf,SAAoCH,IACpC,qBAAKG,UAAU,qBAAf,SAAqCF,MAG1C,ECLcG,G,MANF,SAACR,GACZ,IAAMS,EAAU,QAAUT,EAAMO,UAEhC,OAAO,qBAAKA,UAAWE,EAAhB,SAA0BT,EAAMU,UACxC,GCYcC,EAdK,SAACX,GACnB,OACE,6BACE,eAAC,EAAD,CAAMO,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaL,KAAMF,EAAME,OACzB,sBAAKK,UAAU,4BAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BP,EAAMY,QAClC,sBAAKL,UAAU,sBAAf,cAAuCP,EAAMa,iBAKtD,ECKcC,G,MAlBM,SAACd,GACpB,OAA2B,IAAvBA,EAAMe,MAAMC,OACP,oBAAIT,UAAU,0BAAd,+BAGP,oBAAIA,UAAU,gBAAd,SACGP,EAAMe,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEEN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBX,KAAMgB,EAAQhB,MAHTgB,EAAQC,GAFA,KAUtB,G,OCEcC,G,YAnBE,SAACpB,GAChB,IAAIqB,EAAgB,KAKpB,OAJIrB,EAAMsB,SAAW,IACnBD,EAAgBE,KAAKC,MAAOxB,EAAMyB,MAAQzB,EAAMsB,SAAY,KAAO,KAInE,sBAAKf,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVmB,MAAO,CAAEC,OAAQN,OAGrB,qBAAKd,UAAU,mBAAf,SAAmCP,EAAM4B,UAG9C,GCEcC,EAlBD,SAAC7B,GACb,IAAM8B,EAAc9B,EAAM+B,WAAWd,KAAI,SAACe,GAAD,OAAeA,EAAUP,KAAzB,IACnCH,EAAWC,KAAKU,IAAL,MAAAV,KAAI,YAAQO,IAE7B,OACE,qBAAKvB,UAAU,QAAf,SACGP,EAAM+B,WAAWd,KAAI,SAACe,GAAD,OACpB,cAAC,EAAD,CAEEP,MAAOO,EAAUP,MACjBH,SAAUA,EACVM,MAAOI,EAAUJ,OAHZI,EAAUJ,MAFG,KAU3B,ECMcM,EAvBO,SAAClC,GACrB,IAD+B,EACzBmC,EAAkB,CACtB,CAAEP,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,IAbM,cAeTzB,EAAMoC,UAfG,IAe/B,2BAAsC,CAAC,IAA5BlB,EAA2B,QAEpCiB,EADqBjB,EAAQhB,KAAKmC,YACJZ,OAASP,EAAQL,MAChD,CAlB8B,+BAoB/B,OAAO,cAAC,EAAD,CAAOkB,WAAYI,GAC3B,ECAcG,G,MArBQ,SAACtC,GACtB,IAAMuC,EAAevC,EAAMuC,aAK3B,OACE,qBAAKhC,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQiC,SARe,SAACC,GAC5B,IAAMC,EAAeD,EAAME,OAAOlB,MAClCzB,EAAM4C,eAAeF,EACtB,EAK6CG,aAAcN,EAAtD,UACE,wBAAQd,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,yBAKT,GCOcqB,EArBC,SAAC9C,GACf,MAAwC+C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAIMC,EAAmBlD,EAAMoC,SAASe,QAAO,SAACjC,GAE9C,OADoBA,EAAQhB,KAAKI,gBACV8C,OAAOJ,EAC/B,IACD,OACE,eAAC,EAAD,CAAMzC,UAAU,WAAhB,UACE,cAAC,EAAD,CACEqC,eAVuB,SAACF,GAC5BO,EAAgBP,EACjB,EASKH,aAAcS,IAEhB,cAAC,EAAD,CAAeZ,SAAUc,IACzB,cAAC,EAAD,CAAcnC,MAAOmC,MAG1B,E,OCmDcG,G,YAzEK,SAACrD,GACnB,MAAwC+C,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA0CR,mBAAS,IAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAAsCV,mBAAS,IAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KAkCA,OACE,uBAAMC,SAdkB,SAACnB,GACzBA,EAAMoB,iBACN,IAAMC,EAAc,CAClBlD,MAAO0C,EACPzC,QAAS2C,EACTtD,KAAM,IAAI6D,KAAKL,IAEjB1D,EAAMgE,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,GAChB,EAGC,UACE,sBAAKpD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACE0D,KAAK,OACLxC,MAAO6B,EACPd,SAlCiB,SAACC,GAC1Bc,EAAgBd,EAAME,OAAOlB,MAK9B,OA+BK,sBAAKlB,UAAU,uBAAf,UACE,2CACA,uBACE0D,KAAK,SACLC,IAAI,OACJC,KAAK,OACL1C,MAAO+B,EACPhB,SArCkB,SAACC,GAC3BgB,EAAiBhB,EAAME,OAAOlB,MAC/B,OAsCK,sBAAKlB,UAAU,uBAAf,UACE,yCACA,uBAAO0D,KAAK,OAAOzB,SAvCD,SAACC,GACzBkB,EAAelB,EAAME,OAAOlB,MAC7B,EAqCuDA,MAAOiC,UAG3D,sBAAKnD,UAAU,uBAAf,UACE,wBAAQ0D,KAAK,SAASG,QAASpE,EAAMqE,gBAArC,oBAGA,wBAAQJ,KAAK,SAAb,8BAIP,GCzCcK,EA9BI,SAACtE,GAClB,MAAsC+C,oBAAS,GAA/C,mBAAOwB,EAAP,KAAoBC,EAApB,KASMC,EAAoB,WACxBD,GAAgBD,EACjB,EACD,OACE,sBAAKhE,UAAU,cAAf,WACIgE,GACA,wBAAQN,KAAK,SAASG,QAASK,EAA/B,6BAIDF,GACC,cAAC,EAAD,CACEP,kBApBgB,SAACU,GACvB,IAAMZ,EAAW,2BACZY,GADY,IAEfvD,GAAII,KAAKoD,SAASC,aAEpB5E,EAAM6E,aAAaf,GACnBW,GACD,EAcOJ,gBAAiBI,MAK1B,EC5BKK,EAAiB,CACrB,CACE3D,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRX,KAAM,IAAI6D,KAAK,KAAM,EAAG,KAE1B,CAAE5C,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQX,KAAM,IAAI6D,KAAK,KAAM,EAAG,KACrE,CACE5C,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRX,KAAM,IAAI6D,KAAK,KAAM,EAAG,KAE1B,CACE5C,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRX,KAAM,IAAI6D,KAAK,KAAM,EAAG,MAoBbgB,EAjBH,WACV,MAAgChC,mBAAS+B,GAAzC,mBAAO1C,EAAP,KAAiB4C,EAAjB,KAQA,OACE,sBAAKzE,UAAU,gBAAf,UACE,cAAC,EAAD,CAAYsE,aARU,SAACI,GACzBD,GAAY,SAACE,GACX,MAAM,CAAED,GAAR,mBAAwBC,GACzB,GACF,IAKG,cAAC,EAAD,CAAU9C,SAAUA,MAGzB,ECnCY+C,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.9ff143b9.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"short\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2 className=\"data-title\">{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const valuesArray = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const maxValue = Math.max(...valuesArray);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={maxValue}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const filterOption = props.filterOption;\n  const expenseFilterHandler = (event) => {\n    const chosenOption = event.target.value;\n    props.onChangeOption(chosenOption);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={expenseFilterHandler} defaultValue={filterOption}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"../ExpenseFilter/ExpenseFilter\";\nimport { useState } from \"react\";\n\nconst Expense = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n  const expenseFilterHandler = (chosenOption) => {\n    setFilteredYear(chosenOption);\n  };\n  const filteredExpenses = props.expenses.filter((expense) => {\n    const expenseYear = expense.date.getFullYear();\n    return expenseYear === Number(filteredYear);\n  });\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter\n        onChangeOption={expenseFilterHandler}\n        filterOption={filteredYear}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expense;\n","import { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  /* Alternative */\n  // const [inputValue, setInputValue] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n    /* Alternative */\n    // setInputValue((prevState) => {\n    //   return { ...prevState, enteredTitle: event.target.value };\n    // });\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n  const submitExpenseForm = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitExpenseForm}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" onChange={dateChangeHandler} value={enteredDate} />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancelEditing}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useState } from \"react\";\n\nconst NewExpense = (props) => {\n  const [isFormShown, setIsFormShown] = useState(false);\n  const saveExpenseData = (addedExpenseData) => {\n    const expenseData = {\n      ...addedExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    toggleFormHandler();\n  };\n  const toggleFormHandler = () => {\n    setIsFormShown(!isFormShown);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isFormShown && (\n        <button type=\"button\" onClick={toggleFormHandler}>\n          Add new expense\n        </button>\n      )}\n      {isFormShown && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseData}\n          onCancelEditing={toggleFormHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expenseItem) => {\n    setExpenses((prevExpenses) => {\n      return [expenseItem, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}